Clin2 = Clin[Clin[,"ONCOTREE_CODE"] %in% Cancers,]
assays = as.character(unique(Clin2[,"SEQ_ASSAY_ID"]))
##********************************************************************************************
# Generating regions for assay and chromosome
regions = list()
for (assay in assays){
message(assay)
regions[[assay]] = combine_regions(assay,Hot)
}
##********************************************************************************************
# Calculating individual TMB
Clin3 = Clin2[Clin2$SAMPLE_TYPE_DETAILED=="Primary tumor",]
rec_pats = Clin2[Clin2$SAMPLE_TYPE_DETAILED!="Primary tumor","PATIENT_ID"]
Clin3$RECUR = apply(Clin3,1,function(x) if(as.character(x["PATIENT_ID"]) %in% rec_pats){return(TRUE)}else{return(FALSE)})
ass_len = rep(0,length(assays))
names(ass_len) = assays
for (assay in assays){
ass_len[assay] = assay_len(regions[[assay]])
}
Clin3$MUTCNT = mut_counts(Clin3,Mut)
ASSLEN = rep(NA,dim(Clin3)[1])
for (assay in assays){
ASSLEN[Clin3$SEQ_ASSAY_ID==assay] = ass_len[assay]
}
Clin3$ASSLEN = ASSLEN;
Clin3$TMB = as.numeric(Clin3$MUTCNT*1e6/Clin3$ASSLEN)
##********************************************************************************************
# Sign testing
fit = glm(RECUR ~ TMB*as.numeric(as.character(AGE_AT_SEQ_REPORT)) + ONCOTREE_CODE*TMB, data = Clin3, family = "binomial")
summary(fit)
assays
View(Clin2)
combine_regions <- function(assay,bed){
out=list()
tmp = bed[bed[,"SEQ_ASSAY_ID"]==assay,]
chrms = as.character(unique(tmp[,"Chromosome"]))
for (chrm in chrms){
message(chrm)
tmp2 = tmp[as.character(tmp[,"Chromosome"])==chrm,]
tmp2 = tmp2[order(tmp2$Start_Position),]
i=1
while((i+1) < length(tmp2$Start_Position)){
if (tmp2[i,"End_Position"] > tmp2[i+1,"Start_Position"]){
tmp2[i,"End_Position"] = tmp2[i+1,"End_Position"]
tmp2 = tmp2[-(i+1),]
}else{
i=i+1;
}
}
out[[chrm]] = tmp2
}
return(out)
}
region_intersect <- function(assay1,assay2){
chrms = intersect(names(assay1),names(assay2))
out = list()
for (chrm in chrms){
tmp1 = assay1[[chrm]]
tmp2 = assay2[[chrm]]
tmp3 = c()
message(chrm)
for (i in 1:dim(tmp1)[1]){
row1 = tmp1[i,]
for (j in 1:dim(tmp2)[1]){
row2 = tmp2[j,]
if (min(as.numeric(row1["End_Position"]),as.numeric(row2["End_Position"])) - max(as.numeric(row1["Start_Position"]),as.numeric(row2["Start_Position"]))>0){
tmp3 = rbind(tmp3,c(max(as.numeric(row1["Start_Position"]),as.numeric(row2["Start_Position"])),min(as.numeric(row1["End_Position"]),as.numeric(row2["End_Position"]))))
}
}
}
colnames(tmp3) = c("Start_Position","End_Position")
out[[chrm]] = tmp3
}
return(out)
}
assay_len <- function(assay){
len = 0
chrms = names(assay)
for (chrm in chrms){
len = len + sum(as.numeric(assay[[chrm]][,"End_Position"])-as.numeric(assay[[chrm]][,"Start_Position"]))
}
return(len)
}
mut_counts <- function(clin_dat,mut_dat){
tmp = rep(0,dim(clin_dat)[1])
i=0
while (i<dim(clin_dat)[1]){
i=i+1;
tmp[i] = dim(mut_dat[as.character(mut_dat$Tumor_Sample_Barcode)==as.character(clin_dat[i,"SAMPLE_ID"]),])[1]
}
return(tmp)
}
##********************************************************************************************
# Loading data
Mut = read.table("~/Desktop/GENIE/data_mutations_extended_version4.0.txt",sep='\t',skip=1,header=TRUE)
Clin <- read.csv("~/Desktop/GENIE/Deal_data_clinical_sample_version4.0_zhan.txt", sep="\t", header=TRUE, na.strings="")
Hot = read.table("~/Desktop/GENIE/genie_combined.bed_version4.0.tsv", sep='\t', header=TRUE)
Cancers = c("LUAD","PRAD","IDC","COAD")
Clin2 = Clin[Clin[,"ONCOTREE_CODE"] %in% Cancers,]
assays = c("DFCI-ONCOPANEL-1","DFCI-ONCOPANEL-2","DFCI-ONCOPANEL-3",
"MSK-IMPACT341","MSK-IMPACT410","MSK-IMPACT468",
"VICC-01-T5a","VICC-01-T7","MDA-409-V1");
Clin2 = Clin2[Clin2[,"SEQ_ASSAY_ID"] %in% assays,]
#assays = as.character(unique(Clin2[,"SEQ_ASSAY_ID"]))
regions = list()
for (assay in assays){
message(assay)
regions[[assay]] = combine_regions(assay,Hot)
}
##********************************************************************************************
# Identifying overlapping regions
i=0
while(i<length(assays)){
i=i+1
message(assays[i])
if(i==1){
}else if(i==2){
int_regions = region_intersect(regions[[assays[1]]],regions[[assays[2]]])
}else{
int_regions = region_intersect(int_regions,regions[[assays[i]]])
}
}
x = 0;
for (chrm in names(int_regions)){
x = x + sum(as.numeric(int_regions[[chrm]][,"End_Position"])-as.numeric(int_regions[[chrm]][,"Start_Position"]))
}
unique(Clin2[,"SEQ_ASSAY_ID"])
as.character(unique(Clin2[,"SEQ_ASSAY_ID"]))
##********************************************************************************************
# Loading data
Mut = read.table("~/Desktop/GENIE/data_mutations_extended_version4.0.txt",sep='\t',skip=1,header=TRUE)
Clin <- read.csv("~/Desktop/GENIE/Deal_data_clinical_sample_version4.0_zhan.txt", sep="\t", header=TRUE, na.strings="")
Hot = read.table("~/Desktop/GENIE/genie_combined.bed_version4.0.tsv", sep='\t', header=TRUE)
Cancers = c("LUAD","PRAD","IDC","COAD")
Clin2 = Clin[Clin[,"ONCOTREE_CODE"] %in% Cancers,]
assays = c("DFCI-ONCOPANEL-1","DFCI-ONCOPANEL-2","DFCI-ONCOPANEL-3",
"MSK-IMPACT341","MSK-IMPACT468","VICC-01-T7");
Clin2 = Clin2[Clin2[,"SEQ_ASSAY_ID"] %in% assays,]
Mut = read.table("~/Desktop/GENIE/data_mutations_extended_version4.0.txt",sep='\t',skip=1,header=TRUE)
Clin <- read.csv("~/Desktop/GENIE/Deal_data_clinical_sample_version4.0_zhan.txt", sep="\t", header=TRUE, na.strings="")
Hot = read.table("~/Desktop/GENIE/genie_combined.bed_version4.0.tsv", sep='\t', header=TRUE)
Cancers = c("LUAD","PRAD","IDC","COAD")
Clin2 = Clin[Clin[,"ONCOTREE_CODE"] %in% Cancers,]
assays = c("DFCI-ONCOPANEL-1","DFCI-ONCOPANEL-2","DFCI-ONCOPANEL-3",
"MSK-IMPACT341","MSK-IMPACT410","MSK-IMPACT468","VICC-01-T7");
Clin2 = Clin2[Clin2[,"SEQ_ASSAY_ID"] %in% assays,]
#assays = as.character(unique(Clin2[,"SEQ_ASSAY_ID"]))
Clin2 = Clin[Clin[,"ONCOTREE_CODE"] %in% Cancers,]
as.character(unique(Clin[,"SEQ_ASSAY_ID"]))
Clin2 = Clin[Clin[,"ONCOTREE_CODE"] %in% Cancers,]
assays = c("DFCI-ONCOPANEL-1","DFCI-ONCOPANEL-2","DFCI-ONCOPANEL-3","VICC-01-T5A",
"MSK-IMPACT341","MSK-IMPACT410","MSK-IMPACT468","VICC-01-T7");
Clin2 = Clin2[Clin2[,"SEQ_ASSAY_ID"] %in% assays,]
##********************************************************************************************
# Generating regions for assay and chromosome
regions = list()
for (assay in assays){
message(assay)
regions[[assay]] = combine_regions(assay,Hot)
}
##********************************************************************************************
# Identifying overlapping regions
i=0
while(i<length(assays)){
i=i+1
message(assays[i])
if(i==1){
}else if(i==2){
int_regions = region_intersect(regions[[assays[1]]],regions[[assays[2]]])
}else{
int_regions = region_intersect(int_regions,regions[[assays[i]]])
}
}
x = 0;
for (chrm in names(int_regions)){
x = x + sum(as.numeric(int_regions[[chrm]][,"End_Position"])-as.numeric(int_regions[[chrm]][,"Start_Position"]))
}
##********************************************************************************************
# Calculating individual TMB
Clin3 = Clin2[Clin2$SAMPLE_TYPE_DETAILED=="Primary tumor",]
rec_pats = Clin2[Clin2$SAMPLE_TYPE_DETAILED!="Primary tumor","PATIENT_ID"]
Clin3$RECUR = apply(Clin3,1,function(x) if(as.character(x["PATIENT_ID"]) %in% rec_pats){return(TRUE)}else{return(FALSE)})
ass_len = rep(0,length(assays))
names(ass_len) = assays
for (assay in assays){
ass_len[assay] = assay_len(regions[[assay]])
}
Clin3$MUTCNT = mut_counts(Clin3,Mut)
ASSLEN = rep(NA,dim(Clin3)[1])
for (assay in assays){
ASSLEN[Clin3$SEQ_ASSAY_ID==assay] = ass_len[assay]
}
Clin3$ASSLEN = ASSLEN;
Clin3$TMB = as.numeric(Clin3$MUTCNT*1e6/Clin3$ASSLEN)
fit = glm(RECUR ~ TMB*as.numeric(as.character(AGE_AT_SEQ_REPORT)) + ONCOTREE_CODE*TMB, data = Clin3, family = "binomial")
summary(fit)
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = dat;
##**************************************************************************************
library(MetaNeighbor)
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.5),]
vars = apply(dat,1,var)
quartile(vars,0.8)
quantile(vars,0.8)
vars[1]
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat))
plot(blah2$Y[,1],blah2$Y[,2])
dat = dat[vars>quantile(vars,0.5),]
blah2 = Rtsne(t(dat))
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = dat;
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.5),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.5),]
blah2 = Rtsne(t(dat))
plot(blah2$Y[,1],blah2$Y[,2])
dim(dat)
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = dat;
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.5),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat),perplexity = 50)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.5),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat))
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat))
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat),perplexity = 2)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat),perplexity = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat),perplexity = 200)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat),perplexity = 300,max_iter=5000)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat),perplexity = 150,max_iter=1000)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.3),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat))
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat),partial_pca = TRUE)
plot(blah2$Y[,1],blah2$Y[,2])
install.packages(irlba)
install.packages("irlba")
blah2 = Rtsne(t(dat), partial_pca = TRUE)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 30)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 30,perplexity = 100)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 200)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 50,theta=0.25)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 100,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 20)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 200)
plot(blah2$Y[,1],blah2$Y[,2])
dim(dat)
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.5),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.8),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.8),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.9),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<.9),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.95),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
#dat = dat[which(perc_zeros<.9),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.9),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
#dat = dat[which(perc_zeros<.9),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.99),]
blah2 = Rtsne(t(dat)) #, exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
#dat = dat[which(perc_zeros<.9),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.99),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
#dat = dat[which(perc_zeros<.9),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.99),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2) #,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
5^5
3125/60
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
#dat = dat[which(perc_zeros<.9),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,0.99),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 200)
plot(blah2$Y[,1],blah2$Y[,2])
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = 100,theta=0.25,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2])
zero_prc = c(.5,.8,.9,.95,.99)
var_prc = c(0.5,0.8,0.95,0.99)
perp = c(5,30,50,100,200)
for(z in zero_prc){
for(v in var_prc){
for(p in perp){
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = log2(dat+1);
perc_zeros = rowSums(dat == 0)/dim(dat)[2]
dat = dat[which(perc_zeros<z),]
vars = apply(dat,1,var)
dat = dat[vars>quantile(vars,v),]
blah2 = Rtsne(t(dat), exaggeration_factor = 50,perplexity = p,theta=0.2,num_threads=2,initial_dims = 100)
plot(blah2$Y[,1],blah2$Y[,2],main = paste0("z:",z,"v:",v,"p:",p))
}
}
}
install.packages(singleR)
install.packages("singleR")
install.packages("seurat")
install.packages("Seurat")
library(Seurat)
load("~/Desktop/0661-2_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_2_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_2_CD138Plus_TPM = dat;
load("~/Desktop/0661-3_CD138Plus_TPM.RData")
colnames(dat) = paste("dat0661_3_CD138Plus",1:dim(dat)[2],sep="_")
dat0661_3_CD138Plus_TPM = dat;
dat0661_2_CD138Plus_data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-2_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_2_CD138Plus <- CreateSeuratObject(raw.data = dat0661_2_CD138Plus.data, project = "dat0661_2_CD138Plus")
dat0661_3_CD138Plus_data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-3_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_3_CD138Plus <- CreateSeuratObject(raw.data = dat0661_3_CD138Plus.data, project = "dat0661_3_CD138Plus")
MergeSeurat(object1 = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, add.cell.id1 = "2",
add.cell.id2 = "3", project = "MMRF")
dat0661_2_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-2_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_2_CD138Plus <- CreateSeuratObject(raw.data = dat0661_2_CD138Plus.data, project = "dat0661_2_CD138Plus")
dat0661_3_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-3_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_3_CD138Plus <- CreateSeuratObject(raw.data = dat0661_3_CD138Plus.data, project = "dat0661_3_CD138Plus")
dat = MergeSeurat(object1 = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, add.cell.id1 = "2",
add.cell.id2 = "3", project = "MMRF")
plot(dat)
fig = DimPlot(object = dat, reduction.use = "tsne", group.by = "protocol", pt.size = 0.5,
do.return = TRUE)
fig = DimPlot(object = dat, reduction.use = "pca", group.by = "protocol", pt.size = 0.5,
do.return = TRUE)
fig = DimPlot(object = dat, reduction.use = "cca", group.by = "protocol", pt.size = 0.5,
do.return = TRUE)
fig = DimPlot(object = dat, reduction.use = "cca", group.by = "project", pt.size = 0.5,
do.return = TRUE)
dat = RunCCA(object = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, genes.use = hvg.union)
dat = RunCCA(object = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus)
dat0661_2_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-2_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_2_CD138Plus <- CreateSeuratObject(raw.data = dat0661_2_CD138Plus.data, project = "dat0661_2_CD138Plus")
dat0661_2_CD138Plus <- NormalizeData(object = dat0661_2_CD138Plus)
dat0661_2_CD138Plus <- ScaleData(object = dat0661_2_CD138Plus)
dat0661_2_CD138Plus <- FindVariableGenes(object = dat0661_2_CD138Plus, do.plot = FALSE)
dat0661_3_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-3_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_3_CD138Plus <- CreateSeuratObject(raw.data = dat0661_3_CD138Plus.data, project = "dat0661_3_CD138Plus")
dat0661_3_CD138Plus <- NormalizeData(object = dat0661_3_CD138Plus)
dat0661_3_CD138Plus <- ScaleData(object = dat0661_3_CD138Plus)
dat0661_3_CD138Plus <- FindVariableGenes(object = dat0661_3_CD138Plus, do.plot = FALSE)
hvg.dat0661_2_CD138Plus <- rownames(x = head(x = dat0661_2_CD138Plus@hvg.info, n = 2000))
hvg.dat0661_3_CD138Plus <- rownames(x = head(x = dat0661_3_CD138Plus@hvg.info, n = 2000))
hvg.union <- union(x = hvg.dat0661_2_CD138Plus, y = hvg.dat0661_3_CD138Plus)
dat <- RunCCA(object = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, genes.use = hvg.union)
dim(dat0661_3_CD138Plus)
View(dat0661_3_CD138Plus)
table(dat0661_3_CD138Plus)
dat0661_3_CD138Plus$raw.data$Dim
Dim(dat0661_3_CD138Plus)
dat0661_3_CD138Plus@raw.data@Dim
dat0661_3_CD138Plus@raw.data@Dim[2]
dat <- RunCCA(object = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, genes.use = hvg.union, add.cell.id1 = paste0("dat0661_2_",1:dat0661_2_CD138Plus@raw.data@Dim[2]),
add.cell.id2 = paste0("dat0661_3_",1:dat0661_3_CD138Plus@raw.data@Dim[2]))
dat0661_2_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-2_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_2_CD138Plus <- CreateSeuratObject(raw.data = dat0661_2_CD138Plus.data, project = "dat0661_2_CD138Plus")
dat0661_2_CD138Plus <- NormalizeData(object = dat0661_2_CD138Plus)
dat0661_2_CD138Plus <- ScaleData(object = dat0661_2_CD138Plus)
dat0661_2_CD138Plus <- FindVariableGenes(object = dat0661_2_CD138Plus, do.plot = FALSE)
dat0661_3_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-3_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_3_CD138Plus <- CreateSeuratObject(raw.data = dat0661_3_CD138Plus.data, project = "dat0661_3_CD138Plus")
dat0661_3_CD138Plus <- NormalizeData(object = dat0661_3_CD138Plus)
dat0661_3_CD138Plus <- ScaleData(object = dat0661_3_CD138Plus)
dat0661_3_CD138Plus <- FindVariableGenes(object = dat0661_3_CD138Plus, do.plot = FALSE)
hvg.dat0661_2_CD138Plus <- rownames(x = head(x = dat0661_2_CD138Plus@hvg.info, n = 2000))
hvg.dat0661_3_CD138Plus <- rownames(x = head(x = dat0661_3_CD138Plus@hvg.info, n = 2000))
hvg.union <- union(x = hvg.dat0661_2_CD138Plus, y = hvg.dat0661_3_CD138Plus)
dat <- RunCCA(object = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, genes.use = hvg.union, add.cell.id1 = paste0("dat0661_2_",1:dat0661_2_CD138Plus@raw.data@Dim[2]),
add.cell.id2 = paste0("dat0661_3_",1:dat0661_3_CD138Plus@raw.data@Dim[2]))
dat0661_2_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-2_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_2_CD138Plus <- CreateSeuratObject(raw.data = dat0661_2_CD138Plus.data, project = "dat0661_2_CD138Plus")
dat0661_2_CD138Plus <- NormalizeData(object = dat0661_2_CD138Plus)
dat0661_2_CD138Plus <- ScaleData(object = dat0661_2_CD138Plus)
dat0661_2_CD138Plus <- FindVariableGenes(object = dat0661_2_CD138Plus, do.plot = FALSE)
rm(dat0661_2_CD138Plus.data)
dat0661_3_CD138Plus.data <- Read10X(data.dir = "~/Desktop/MMRF_TL/0661-3_CD138Plus/outs/filtered_gene_bc_matrices/GRCh38/")
dat0661_3_CD138Plus <- CreateSeuratObject(raw.data = dat0661_3_CD138Plus.data, project = "dat0661_3_CD138Plus")
dat0661_3_CD138Plus <- NormalizeData(object = dat0661_3_CD138Plus)
dat0661_3_CD138Plus <- ScaleData(object = dat0661_3_CD138Plus)
dat0661_3_CD138Plus <- FindVariableGenes(object = dat0661_3_CD138Plus, do.plot = FALSE)
rm(dat0661_3_CD138Plus.data)
hvg.dat0661_2_CD138Plus <- rownames(x = head(x = dat0661_2_CD138Plus@hvg.info, n = 2000))
hvg.dat0661_3_CD138Plus <- rownames(x = head(x = dat0661_3_CD138Plus@hvg.info, n = 2000))
hvg.union <- union(x = hvg.dat0661_2_CD138Plus, y = hvg.dat0661_3_CD138Plus)
dat <- RunCCA(object = dat0661_2_CD138Plus, object2 = dat0661_3_CD138Plus, genes.use = hvg.union, add.cell.id1 = paste0("dat0661_2_",1:dat0661_2_CD138Plus@raw.data@Dim[2]),
add.cell.id2 = paste0("dat0661_3_",1:dat0661_3_CD138Plus@raw.data@Dim[2]))
