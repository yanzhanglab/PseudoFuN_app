root.path = "~/Desktop/20180621_experiment_tables"
tcga.dirs = list.dirs(path = root.path,full.names = FALSE);
tcga.dirs = tcga.dirs[tcga.dirs!=""]
mn.CI = matrix(0,length(tcga.dirs),2);
colnames(mn.CI) =c("median.CI","median.TMB")
row.names(mn.CI) = tcga.dirs;
for(dir in tcga.dirs){
message(dir)
X = read.csv(paste0(root.path,"/",dir,"/CI.csv"),row.names=1,header=TRUE)
mn.CI[dir,"median.CI"] = max(as.matrix(X[1:3,]),na.rm=TRUE)
}
#tmb.col = "Percent.cases.with..20.mutations.Mb"
tmb.col = "Maximum.TMB"
#tmb.col = "Median.TMB"
TMB = read.csv(paste0(root.path,"/13073_2017_424_MOESM3_ESM.csv"),row.names=1,header=TRUE)
mn.CI["bladder","median.TMB"] = TMB["bladder urothelial (transitional cell) carcinoma",tmb.col]
mn.CI["breast","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["esophagus","median.TMB"] = TMB["esophagus carcinoma (nos)",tmb.col]
mn.CI["headAndNeck","median.TMB"] = TMB["head and neck squamous cell carcinoma (hnscc)",tmb.col]
mn.CI["kidney_KIRC","median.TMB"] = TMB["kidney clear cell carcinoma",tmb.col]
mn.CI["kidney_KIRP","median.TMB"] = TMB["kidney renal papillary carcinoma",tmb.col]
mn.CI["liver","median.TMB"] = TMB["liver hepatocellular carcinoma (hcc)",tmb.col]
mn.CI["lung_LUAD","median.TMB"] = TMB["lung squamous cell carcinoma (scc)",tmb.col]
mn.CI["lung_LUSC","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["ovary","median.TMB"] = TMB["ovary serous carcinoma",tmb.col]
mn.CI["pancreas","median.TMB"] = TMB["pancreas ductal adenocarcinoma",tmb.col]
mn.CI["stomach","median.TMB"] = TMB["stomach adenocarcinoma (nos)",tmb.col]
plot(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
cor.test(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
#tmb.col = "Percent.cases.with..20.mutations.Mb"
tmb.col = "Maximum.TMB"
#tmb.col = "Median.TMB"
TMB = read.csv(paste0(root.path,"/13073_2017_424_MOESM3_ESM.csv"),row.names=1,header=TRUE)
mn.CI["bladder","median.TMB"] = TMB["bladder urothelial (transitional cell) carcinoma",tmb.col]
mn.CI["breast","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["esophagus","median.TMB"] = TMB["esophagus carcinoma (nos)",tmb.col]
mn.CI["headAndNeck","median.TMB"] = TMB["head and neck squamous cell carcinoma (hnscc)",tmb.col]
mn.CI["kidney_KIRC","median.TMB"] = TMB["kidney clear cell carcinoma",tmb.col]
mn.CI["kidney_KIRP","median.TMB"] = TMB["kidney renal papillary carcinoma",tmb.col]
mn.CI["liver","median.TMB"] = TMB["liver hepatocellular carcinoma (hcc)",tmb.col]
mn.CI["lung_LUAD","median.TMB"] = TMB["lung squamous cell carcinoma (scc)",tmb.col]
mn.CI["lung_LUSC","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["ovary","median.TMB"] = TMB["ovary serous carcinoma",tmb.col]
mn.CI["pancreas","median.TMB"] = TMB["pancreas ductal adenocarcinoma",tmb.col]
mn.CI["stomach","median.TMB"] = TMB["stomach adenocarcinoma (nos)",tmb.col]
plot(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
cor.test(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
root.path = "~/Desktop/20180621_experiment_tables"
tcga.dirs = list.dirs(path = root.path,full.names = FALSE);
tcga.dirs = tcga.dirs[tcga.dirs!=""]
mn.CI = matrix(0,length(tcga.dirs),2);
colnames(mn.CI) =c("median.CI","median.TMB")
row.names(mn.CI) = tcga.dirs;
for(dir in tcga.dirs){
message(dir)
X = read.csv(paste0(root.path,"/",dir,"/CI.csv"),row.names=1,header=TRUE)
mn.CI[dir,"median.CI"] = max(as.matrix(X),na.rm=TRUE)
}
tmb.col = "Percent.cases.with..20.mutations.Mb"
#tmb.col = "Maximum.TMB"
#tmb.col = "Median.TMB"
TMB = read.csv(paste0(root.path,"/13073_2017_424_MOESM3_ESM.csv"),row.names=1,header=TRUE)
mn.CI["bladder","median.TMB"] = TMB["bladder urothelial (transitional cell) carcinoma",tmb.col]
mn.CI["breast","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["esophagus","median.TMB"] = TMB["esophagus carcinoma (nos)",tmb.col]
mn.CI["headAndNeck","median.TMB"] = TMB["head and neck squamous cell carcinoma (hnscc)",tmb.col]
mn.CI["kidney_KIRC","median.TMB"] = TMB["kidney clear cell carcinoma",tmb.col]
mn.CI["kidney_KIRP","median.TMB"] = TMB["kidney renal papillary carcinoma",tmb.col]
mn.CI["liver","median.TMB"] = TMB["liver hepatocellular carcinoma (hcc)",tmb.col]
mn.CI["lung_LUAD","median.TMB"] = TMB["lung squamous cell carcinoma (scc)",tmb.col]
mn.CI["lung_LUSC","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["ovary","median.TMB"] = TMB["ovary serous carcinoma",tmb.col]
mn.CI["pancreas","median.TMB"] = TMB["pancreas ductal adenocarcinoma",tmb.col]
mn.CI["stomach","median.TMB"] = TMB["stomach adenocarcinoma (nos)",tmb.col]
plot(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
cor.test(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
#plot(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#cor.test(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#plot(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
#cor.test(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
root.path = "~/Desktop/20180621_experiment_tables"
tcga.dirs = list.dirs(path = root.path,full.names = FALSE);
tcga.dirs = tcga.dirs[tcga.dirs!=""]
mn.CI = matrix(0,length(tcga.dirs),2);
colnames(mn.CI) =c("median.CI","median.TMB")
row.names(mn.CI) = tcga.dirs;
for(dir in tcga.dirs){
message(dir)
X = read.csv(paste0(root.path,"/",dir,"/CI.csv"),row.names=1,header=TRUE)
mn.CI[dir,"median.CI"] = mean(as.matrix(X),na.rm=TRUE)
}
tmb.col = "Percent.cases.with..20.mutations.Mb"
#tmb.col = "Maximum.TMB"
#tmb.col = "Median.TMB"
TMB = read.csv(paste0(root.path,"/13073_2017_424_MOESM3_ESM.csv"),row.names=1,header=TRUE)
mn.CI["bladder","median.TMB"] = TMB["bladder urothelial (transitional cell) carcinoma",tmb.col]
mn.CI["breast","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["esophagus","median.TMB"] = TMB["esophagus carcinoma (nos)",tmb.col]
mn.CI["headAndNeck","median.TMB"] = TMB["head and neck squamous cell carcinoma (hnscc)",tmb.col]
mn.CI["kidney_KIRC","median.TMB"] = TMB["kidney clear cell carcinoma",tmb.col]
mn.CI["kidney_KIRP","median.TMB"] = TMB["kidney renal papillary carcinoma",tmb.col]
mn.CI["liver","median.TMB"] = TMB["liver hepatocellular carcinoma (hcc)",tmb.col]
mn.CI["lung_LUAD","median.TMB"] = TMB["lung squamous cell carcinoma (scc)",tmb.col]
mn.CI["lung_LUSC","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["ovary","median.TMB"] = TMB["ovary serous carcinoma",tmb.col]
mn.CI["pancreas","median.TMB"] = TMB["pancreas ductal adenocarcinoma",tmb.col]
mn.CI["stomach","median.TMB"] = TMB["stomach adenocarcinoma (nos)",tmb.col]
plot(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
cor.test(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
#plot(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#cor.test(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#plot(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
#cor.test(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
root.path = "~/Desktop/20180621_experiment_tables"
tcga.dirs = list.dirs(path = root.path,full.names = FALSE);
tcga.dirs = tcga.dirs[tcga.dirs!=""]
mn.CI = matrix(0,length(tcga.dirs),2);
colnames(mn.CI) =c("median.CI","median.TMB")
row.names(mn.CI) = tcga.dirs;
for(dir in tcga.dirs){
message(dir)
X = read.csv(paste0(root.path,"/",dir,"/CI.csv"),row.names=1,header=TRUE)
mn.CI[dir,"median.CI"] = median(as.matrix(X),na.rm=TRUE)
}
tmb.col = "Percent.cases.with..20.mutations.Mb"
#tmb.col = "Maximum.TMB"
#tmb.col = "Median.TMB"
TMB = read.csv(paste0(root.path,"/13073_2017_424_MOESM3_ESM.csv"),row.names=1,header=TRUE)
mn.CI["bladder","median.TMB"] = TMB["bladder urothelial (transitional cell) carcinoma",tmb.col]
mn.CI["breast","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["esophagus","median.TMB"] = TMB["esophagus carcinoma (nos)",tmb.col]
mn.CI["headAndNeck","median.TMB"] = TMB["head and neck squamous cell carcinoma (hnscc)",tmb.col]
mn.CI["kidney_KIRC","median.TMB"] = TMB["kidney clear cell carcinoma",tmb.col]
mn.CI["kidney_KIRP","median.TMB"] = TMB["kidney renal papillary carcinoma",tmb.col]
mn.CI["liver","median.TMB"] = TMB["liver hepatocellular carcinoma (hcc)",tmb.col]
mn.CI["lung_LUAD","median.TMB"] = TMB["lung squamous cell carcinoma (scc)",tmb.col]
mn.CI["lung_LUSC","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["ovary","median.TMB"] = TMB["ovary serous carcinoma",tmb.col]
mn.CI["pancreas","median.TMB"] = TMB["pancreas ductal adenocarcinoma",tmb.col]
mn.CI["stomach","median.TMB"] = TMB["stomach adenocarcinoma (nos)",tmb.col]
plot(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
cor.test(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
#plot(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#cor.test(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#plot(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
#cor.test(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
for(dir in tcga.dirs){
message(dir)
X = read.csv(paste0(root.path,"/",dir,"/CI.csv"),row.names=1,header=TRUE)
mn.CI[dir,"median.CI"] = max(as.matrix(X),na.rm=TRUE)
}
tmb.col = "Percent.cases.with..20.mutations.Mb"
#tmb.col = "Maximum.TMB"
#tmb.col = "Median.TMB"
TMB = read.csv(paste0(root.path,"/13073_2017_424_MOESM3_ESM.csv"),row.names=1,header=TRUE)
mn.CI["bladder","median.TMB"] = TMB["bladder urothelial (transitional cell) carcinoma",tmb.col]
mn.CI["breast","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["esophagus","median.TMB"] = TMB["esophagus carcinoma (nos)",tmb.col]
mn.CI["headAndNeck","median.TMB"] = TMB["head and neck squamous cell carcinoma (hnscc)",tmb.col]
mn.CI["kidney_KIRC","median.TMB"] = TMB["kidney clear cell carcinoma",tmb.col]
mn.CI["kidney_KIRP","median.TMB"] = TMB["kidney renal papillary carcinoma",tmb.col]
mn.CI["liver","median.TMB"] = TMB["liver hepatocellular carcinoma (hcc)",tmb.col]
mn.CI["lung_LUAD","median.TMB"] = TMB["lung squamous cell carcinoma (scc)",tmb.col]
mn.CI["lung_LUSC","median.TMB"] = TMB["breast carcinoma (nos)",tmb.col]
mn.CI["ovary","median.TMB"] = TMB["ovary serous carcinoma",tmb.col]
mn.CI["pancreas","median.TMB"] = TMB["pancreas ductal adenocarcinoma",tmb.col]
mn.CI["stomach","median.TMB"] = TMB["stomach adenocarcinoma (nos)",tmb.col]
plot(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
cor.test(log2(mn.CI[,2]+1),log2(mn.CI[,1]+1))
#plot(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#cor.test(log2(mn.CI[c(1:2,4:12),2]+1),log2(mn.CI[c(1:2,4:12),1]+1))
#plot(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
#cor.test(mn.CI[c(1:2,4:12),2],mn.CI[c(1:2,4:12),1])
shiny::runApp('~/Desktop/NAR_2018/PseudoFuN_app')
library(rsconnect)
deplyApp()
depl0yApp()
deployApp()
options(repos = BiocInstaller::biocinstallRepos(),rsconnect.max.bundle.size = 3145728000)
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
deployApp()
setwd("~/Desktop/NAR_2018/PseudoFuN_app")
options(repos = BiocInstaller::biocinstallRepos(),rsconnect.max.bundle.size = 3145728000)
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
deployApp()
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
rsconnect::deployApp(server="shinyapps.io")
rsconnect::deployApp(server="shinyapps.io")
rsconnect::deployApp(server="shinyapps.io")
rsconnect::deployApp(server="shinyapps.io")
rsconnect::deployApp(server="shinyapps.io")
rsconnect::deployApp(server="shinyapps.io")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
find_pgAmats("KRAS1P",dataset = )
find_pgAmats("KRAS1P",dataset)
map_genes("KRAS1P",annot)
map_genes("KRASP1",annot)
find_pgAmats(map_genes("KRASP1",annot),dataset)
dataset[["pgAmat2547.csv"]]
runApp()
find_pgAmats(map_genes("KRASP1",annot),dataset)
map_genes("KRASP1",annot)
find_pgAmats("ENST00000407852",dataset)
runApp()
blah = c(TRUE,TRUE,FALSE)
sum(blah)
sum(!blah)
runApp()
runApp()
runApp()
runApp()
runApp()
View(blah)
runApp()
View(tester)
runApp()
View(tester[,1:10])
runApp()
View(tester[,1:10])
sub(".*[.]","",row.names(tester))
sub("[.].*","",row.names(tester))
runApp()
View(Etcga[,1:10])
runApp()
grep("NA","NAKRASP1OR11J5PKRT18P59RAP1BP2VDAC1P8RAP1APNA.1HS6ST1P1RAP1BP1KCNMB3P1RAP1BP3")
runApp()
tester1
tester2
tester2[tester2!="NA"]
sub("[.].*","",tester2)
tester2[sub("[.].*","",tester2)!="NA")
tester2[sub("[.].*","",tester2)!="NA"]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rowSums(tester2[,1:10])
rowSums(as.numeric(tester2[,1:10])
)
blah = tester2[,1;10]
blah = tester2[,1:10]
blah = apply(blah,2,as.numeric)
blah[1:5,1:5]
colSums(blah,na.rm=TRUE)
runApp()
blah = apply(tester2[,1:10],2,as.numeric)
blah2 = apply(tester2[,1:10],2,as.numeric)
blah1 = apply(tester1[,1:10],2,as.numeric)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
options(repos = BiocInstaller::biocinstallRepos(),rsconnect.max.bundle.size = 3145728000)
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
rsconnect::deployApp(server="shinyapps.io")
showModal(modalDialog(div(class = "busy",
p("Calculation in progress.."),
img(src="https://tenor.com/view/after-effects-animation-color-loading-screen-gif-5571203")
))
# showModal(modalDialog(
#   title = title, footer = NULL,
#   div(class = "busy",
#       p(content),
#       img(src="https://cdn.dribbble.com/users/503653/screenshots/3143656/fluid-loader.gif"),
#       style = "margin: auto; text-align: center"
#   )
# ))
}
}
showModal(modalDialog(div(class = "busy", p("Calculation in progress.."),
img(src="https://tenor.com/view/after-effects-animation-color-loading-screen-gif-5571203")
)))
runApp()
runApp()
runApp()
runApp()
options(repos = BiocInstaller::biocinstallRepos(),rsconnect.max.bundle.size = 3145728000)
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
rsconnect::deployApp(server="shinyapps.io")
options(repos = BiocInstaller::biocinstallRepos(),rsconnect.max.bundle.size = 3145728000)
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
rsconnect::deployApp(server="shinyapps.io")
runApp()
options(repos = BiocInstaller::biocinstallRepos(),rsconnect.max.bundle.size = 3145728000)
rsconnect::setAccountInfo(name='integrativeomics',
token='42D566E788C0194A4F77BD5B0B43116B',
secret='QQii6z+g/ce8LfDyjjsH/jLPENLxK0sOKiMLIbOt')
rsconnect::deployApp(server="shinyapps.io")
